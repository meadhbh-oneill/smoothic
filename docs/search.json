[{"path":"https://meadhbh-oneill.github.io/smoothic/articles/sgnd-boston.html","id":"boston-housing-data","dir":"Articles","previous_headings":"","what":"Boston Housing Data","title":"Smooth Generalized Normal Distribution","text":"Perform automatic variable selection using smooth information criterion. Display estimates standard errors. Plot standardized coefficient values respect epsilon-telescope.  Plot model-based conditional density curves.","code":"fit <- smoothic(   formula = lcmedv ~ .,   data = bostonhouseprice2,   family = \"sgnd\", # Smooth Generalized Normal Distribution   model = \"mpr\" # model location and scale ) summary(fit) #> Call: #> smoothic(formula = lcmedv ~ ., data = bostonhouseprice2, family = \"sgnd\",  #>     model = \"mpr\") #> Family: #> [1] \"sgnd\" #> Model: #> [1] \"mpr\" #>  #> Coefficients: #>                      Estimate         SEE       Z    Pvalue     #> intercept_0_beta   3.61772162  0.09916582 36.4815 < 2.2e-16 *** #> crim_1_beta       -0.02046034  0.00515589 -3.9683 9.872e-05 *** #> zn_2_beta                   0           0       0         0     #> indus_3_beta                0           0       0         0     #> rm_4_beta          0.23378446  0.01398883 16.7122 < 2.2e-16 *** #> age_5_beta        -0.00106419  0.00035567 -2.9921 0.0020138 **  #> rad_6_beta         0.00885735  0.00232857  3.8038 0.0001687 *** #> ptratio_7_beta    -0.02597042  0.00282654 -9.1881 2.163e-14 *** #> lnox_8_beta       -0.28190700  0.08335812 -3.3819 0.0006350 *** #> ldis_9_beta       -0.16002719  0.02314790 -6.9132 1.102e-09 *** #> ltax_10_beta      -0.18473332  0.02925197 -6.3152 1.441e-08 *** #> llstat_11_beta    -0.17168526  0.02254110 -7.6165 4.587e-11 *** #> chast_12_beta      0.04889400  0.01960536  2.4939 0.0079223 **  #> intercept_0_alpha -9.65111722  2.30101724 -4.1943 4.631e-05 *** #> crim_1_alpha       0.02045047  0.01592151  1.2845 0.1290120     #> zn_2_alpha                  0           0       0         0     #> indus_3_alpha     -0.03248663  0.02256904 -1.4394 0.0945168 .   #> rm_4_alpha        -0.19499575  0.10280947 -1.8967 0.0347130 *   #> age_5_alpha                 0           0       0         0     #> rad_6_alpha        0.03303700  0.01779287  1.8568 0.0380660 *   #> ptratio_7_alpha             0           0       0         0     #> lnox_8_alpha      -0.31216820  0.82556198 -0.3781 0.5783418     #> ldis_9_alpha      -1.00459952  0.27089326 -3.7085 0.0002296 *** #> ltax_10_alpha      1.37124333  0.39284716  3.4905 0.0004543 *** #> llstat_11_alpha             0           0       0         0     #> chast_12_alpha              0           0       0         0     #> nu_0               0.29274627  0.10671811  2.7432 0.0040546 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> Penalized Likelihood: #> [1] 220.9332  fit$kappa # shape estimate #> [1] 1.540103 plot_paths(fit) plot_effects(fit,              what = c(\"median\", \"ltax\", \"rm\", \"ldis\"), # or \"all\" for all selected variables              density_range = c(2.25, 3.75))"},{"path":"https://meadhbh-oneill.github.io/smoothic/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Meadhbh O'Neill. Author, maintainer. Kevin Burke. Author.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"O'Neill M, Burke K (2023). smoothic: Variable Selection Using Smooth Information Criterion. https://github.com/meadhbh-oneill/smoothic, https://meadhbh-oneill.ie/smoothic/.","code":"@Manual{,   title = {smoothic: Variable Selection Using a Smooth Information Criterion},   author = {Meadhbh O'Neill and Kevin Burke},   year = {2023},   note = {https://github.com/meadhbh-oneill/smoothic, https://meadhbh-oneill.ie/smoothic/}, }"},{"path":"https://meadhbh-oneill.github.io/smoothic/index.html","id":"smoothic-","dir":"","previous_headings":"","what":"Variable Selection Using a Smooth Information Criterion","title":"Variable Selection Using a Smooth Information Criterion","text":"information, check smoothic website. Implementation SIC epsilon-telescope method, either using single multi-parameter regression. Includes classical regression normally distributed errors robust regression, errors Laplace distribution. “smooth generalized normal distribution” used, estimation additional shape parameter allows user move smoothly types regression. See O’Neill Burke (2022) “Robust Distributional Regression Automatic Variable Selection” details arXiv. package also contains data analyses O’Neill Burke (2023). “Variable selection using smooth information criterion distributional regression models” Statistics & Computing.","code":""},{"path":[]},{"path":"https://meadhbh-oneill.github.io/smoothic/index.html","id":"cran","dir":"","previous_headings":"Installation","what":"CRAN","title":"Variable Selection Using a Smooth Information Criterion","text":"can install released version smoothic CRAN :","code":"install.packages(\"smoothic\")"},{"path":"https://meadhbh-oneill.github.io/smoothic/index.html","id":"github","dir":"","previous_headings":"Installation","what":"Github","title":"Variable Selection Using a Smooth Information Criterion","text":"Install development version GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"meadhbh-oneill/smoothic\")"},{"path":"https://meadhbh-oneill.github.io/smoothic/index.html","id":"smoothic","dir":"","previous_headings":"Installation","what":"smoothic()","title":"Variable Selection Using a Smooth Information Criterion","text":"smoothic() function performs automatic variable selection distributional regression. summary table includes estimated coefficients, estimated standard errors (SEE) value penalized likelihood function returned : information examples implementation (including plotting coefficient paths - vignette(\"sgnd-boston\")) available function documentation vignettes.","code":"library(smoothic) fit <- smoothic(   formula = y ~ .,   data = dataset ) summary(fit)"},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/bostonhouseprice.html","id":null,"dir":"Reference","previous_headings":"","what":"Boston House Price Data (Original) — bostonhouseprice","title":"Boston House Price Data (Original) — bostonhouseprice","text":"Original data, come study Harrison Jr Rubinfeld (1978), examining association median house prices particular community various community characteristics. See bostonhouseprice2 corrected version, additional variables.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/bostonhouseprice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boston House Price Data (Original) — bostonhouseprice","text":"","code":"bostonhouseprice"},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/bostonhouseprice.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Boston House Price Data (Original) — bostonhouseprice","text":"data frame 506 rows 9 variables: crime crimes committed per capita rooms average number rooms per house radial index accessibility radial highways stratio average student-teacher ratio schools community lowstat percentage population \"lower status\" lnox log(annual average nitrogen oxide concentration (pphm)) lproptax log(property tax per $1000) ldist log(weighted distances five employment centres Boston region) lprice log(median house price ($))","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/bostonhouseprice.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Boston House Price Data (Original) — bostonhouseprice","text":"https://CRAN.R-project.org/package=wooldridge","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/bostonhouseprice.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Boston House Price Data (Original) — bostonhouseprice","text":"Harrison Jr, D. Rubinfeld, D. L. (1978). Hedonic housing prices demand clean air. Journal environmental economics management, 5(1):81-102. Wooldridge, J. M. (2015). Introductory econometrics: modern approach. Cengage learning.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/bostonhouseprice2.html","id":null,"dir":"Reference","previous_headings":"","what":"Boston House Price Data (Corrected Version) — bostonhouseprice2","title":"Boston House Price Data (Corrected Version) — bostonhouseprice2","text":"Corrected data, come study Harrison Jr Rubinfeld (1978), examining association median house prices particular community various community characteristics. See bostonhouseprice original version.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/bostonhouseprice2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boston House Price Data (Corrected Version) — bostonhouseprice2","text":"","code":"bostonhouseprice2"},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/bostonhouseprice2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Boston House Price Data (Corrected Version) — bostonhouseprice2","text":"data frame 506 rows 13 variables: crim per capita crime rate town zn proportion residential land zoned lots 25,000 sq.ft indus proportion non-retail business acres per town rm average number rooms per dwelling age proportion owner-occupied units built prior 1940 rad index accessibility radial highways ptratio pupil-teacher ratio town lnox log(nitric oxides concentration (parts per 10 million)) ldis log(weighted distances five Boston employment centres) ltax log(full-value property-tax rate per USD 10,000) llstat log(percentage lower status population) chast Charles River dummy variable (=1 tract bounds river; 0 otherwise) lcmedv log(corrected median value owner-occupied homes USD 1000's)","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/bostonhouseprice2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Boston House Price Data (Corrected Version) — bostonhouseprice2","text":"https://CRAN.R-project.org/package=mlbench","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/bostonhouseprice2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Boston House Price Data (Corrected Version) — bostonhouseprice2","text":"Harrison Jr, D. Rubinfeld, D. L. (1978). Hedonic housing prices demand clean air. Journal environmental economics management, 5(1):81-102. Leisch F, Dimitriadou E (2021). mlbench: Machine Learning Benchmark Problems. R package version 2.1-3.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/diabetes.html","id":null,"dir":"Reference","previous_headings":"","what":"Diabetes Data — diabetes","title":"Diabetes Data — diabetes","text":"Data relating study disease progression one year baseline.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/diabetes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diabetes Data — diabetes","text":"","code":"diabetes"},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/diabetes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Diabetes Data — diabetes","text":"data frame 442 rows 11 variables: AGE age patient SEX sex patient BMI body mass index patient BP blood pressure patient S1 blood serum measurement 1 S2 blood serum measurement 2 S3 blood serum measurement 3 S4 blood serum measurement 4 S5 blood serum measurement 5 S6 blood serum measurement 6 Y quantitative measure disease progression one year baseline","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/diabetes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Diabetes Data — diabetes","text":"https://CRAN.R-project.org/package=lars","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/diabetes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Diabetes Data — diabetes","text":"Efron, B., Hastie, T., Johnstone, ., Tibshirani, R., et al. (2004). Least angle regression. Annals Statistics.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/pcancer.html","id":null,"dir":"Reference","previous_headings":"","what":"Prostate Cancer Data — pcancer","title":"Prostate Cancer Data — pcancer","text":"Data, come study Stamey et al. (1989), examining correlation level prostate-specific antigen (PSA) various clinical measures men receive radical prostatectomy.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/pcancer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prostate Cancer Data — pcancer","text":"","code":"pcancer"},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/pcancer.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Prostate Cancer Data — pcancer","text":"data frame 97 rows 9 variables: lcavol log(cancer volume (cm^3)) lweight log(prostate weight (g)) age age patient lbph log(amount benign prostatic hyperplasia (cm^2)) svi presence seminal vesicle invasion (1=yes, 0=) lcp log(capsular penetration (cm)) gleason Gleason score pgg45 percentage Gleason scores four five lpsa log(PSA (ng/mL))","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/pcancer.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Prostate Cancer Data — pcancer","text":"https://web.stanford.edu/~hastie/ElemStatLearn/datasets/prostate.data","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/pcancer.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Prostate Cancer Data — pcancer","text":"Stamey, T. ., Kabalin, J. N., McNeal, J. E., Johnstone, . M., Freiha, F., Redwine, E. ., Yang, N. (1989). Prostate specific antigen diagnosis treatment adenocarcinoma prostate. ii. radical prostatectomy treated patients. Journal urology, 141(5):1076-1083.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/plot_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot conditional density curves — plot_effects","title":"Plot conditional density curves — plot_effects","text":"function plots model-based conditional density curves different effect combinations. example, take particular covariate selected final model. selected covariates fixed median values plotted red blue densities correspond modification chosen covariate \"low\" (Q1, first quartile) \"high\" (Q3, third quartile).","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/plot_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot conditional density curves — plot_effects","text":"","code":"plot_effects(obj, what = \"all\", density_range)"},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/plot_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot conditional density curves — plot_effects","text":"obj object class “smoothic” result call smoothic. covariate effects plotted, default = \"\". user may supply vector covariate names plotted (covariates selected final model can plotted). Additionally, \"baseline\" \"average\" individual can plotted supplying = \"median\". density_range Optional range density curves plotted.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/plot_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot conditional density curves — plot_effects","text":"plot conditional density curves.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/plot_effects.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot conditional density curves — plot_effects","text":"Meadhbh O'Neill","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/plot_effects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot conditional density curves — plot_effects","text":"","code":"# Sniffer Data -------------------- # MPR Model ---- results <- smoothic(   formula = y ~ .,   data = sniffer,   family = \"normal\",   model = \"mpr\" ) plot_effects(results)"},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/plot_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the epsilon-telescope coefficient paths — plot_paths","title":"Plot the epsilon-telescope coefficient paths — plot_paths","text":"function plots standardized coefficient values respect epsilon-telescope location (dispersion) components.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/plot_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the epsilon-telescope coefficient paths — plot_paths","text":"","code":"plot_paths(   obj,   log_scale_x = TRUE,   log_scale_x_pretty = TRUE,   facet_scales = \"fixed\" )"},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/plot_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the epsilon-telescope coefficient paths — plot_paths","text":"obj object class “smoothic” result call smoothic. log_scale_x Default log_scale_x = TRUE, uses log scale x-axis. log_scale_x = FALSE, raw values epsilon-telescope plotted. log_scale_x_pretty Default log_scale_x_pretty = TRUE, x-axis labels \"pretty\". epsilon_1 epsilon_T must number power 10 apply. facet_scales Default facet_scales = \"fixed\". supplied facet_wrap.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/plot_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the epsilon-telescope coefficient paths — plot_paths","text":"plot standardized coefficient values epsilon-telescope.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/plot_paths.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot the epsilon-telescope coefficient paths — plot_paths","text":"Meadhbh O'Neill","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/plot_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the epsilon-telescope coefficient paths — plot_paths","text":"","code":"# Sniffer Data -------------------- # MPR Model ---- results <- smoothic(   formula = y ~ .,   data = sniffer,   family = \"normal\",   model = \"mpr\" ) plot_paths(results)"},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/predict.smoothic.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict smoothic — predict.smoothic","title":"Predict smoothic — predict.smoothic","text":"predict method class “smoothic”","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/predict.smoothic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict smoothic — predict.smoothic","text":"","code":"# S3 method for smoothic predict(object, newdata, ...)"},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/predict.smoothic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict smoothic — predict.smoothic","text":"object object class “smoothic” result call smoothic. newdata new data object ... arguments passed methods.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/predict.smoothic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict smoothic — predict.smoothic","text":"matrix containing predicted values location mu scale s","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/predict.smoothic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predict smoothic — predict.smoothic","text":"Meadhbh O'Neill","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/predict.smoothic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict smoothic — predict.smoothic","text":"","code":"# Sniffer Data -------------------- # MPR Model ---- results <- smoothic(   formula = y ~ .,   data = sniffer,   family = \"normal\",   model = \"mpr\" ) predict(results) #>           mu        s #> 1   23.85783 1.846919 #> 2   26.20666 2.821905 #> 3   27.57491 3.250179 #> 4   26.97760 3.159616 #> 5   26.36969 2.520290 #> 6   23.07232 2.010327 #> 7   22.00986 1.899856 #> 8   22.36969 1.954311 #> 9   25.87344 3.071576 #> 10  24.81460 2.985990 #> 11  25.21177 3.071576 #> 12  24.99569 3.071576 #> 13  27.58523 3.343337 #> 14  27.60789 3.343337 #> 15  27.48118 3.343337 #> 16  28.30850 3.639143 #> 17  21.45150 2.010327 #> 18  21.29180 1.954311 #> 19  20.59354 1.846919 #> 20  20.96496 1.954311 #> 21  32.01770 3.537742 #> 22  32.50424 3.639143 #> 23  33.28390 3.850748 #> 24  33.51031 3.961120 #> 25  33.51031 3.961120 #> 26  33.51031 3.961120 #> 27  31.98683 3.961120 #> 28  31.69733 3.961120 #> 29  31.47092 3.850748 #> 30  32.52179 3.961120 #> 31  32.43242 3.961120 #> 32  32.34305 3.961120 #> 33  31.98322 3.850748 #> 34  32.20963 3.961120 #> 35  31.62264 3.961120 #> 36  31.87916 3.850748 #> 37  31.52966 3.850748 #> 38  30.59753 3.743450 #> 39  31.41092 3.850748 #> 40  31.63733 3.961120 #> 41  32.17589 4.074657 #> 42  32.40230 4.191447 #> 43  31.60359 4.074657 #> 44  31.25845 3.961120 #> 45  24.01845 2.010327 #> 46  23.37944 2.010327 #> 47  25.59681 2.188193 #> 48  21.95129 2.127221 #> 49  20.58901 1.954311 #> 50  30.08833 3.639143 #> 51  30.73818 3.961120 #> 52  30.75286 3.961120 #> 53  31.30612 4.074657 #> 54  31.84107 4.074657 #> 55  31.39549 4.074657 #> 56  30.97927 4.074657 #> 57  42.03623 4.435166 #> 58  41.23317 4.435166 #> 59  42.82635 3.537742 #> 60  43.73197 3.961120 #> 61  51.00346 8.989474 #> 62  52.09889 9.784828 #> 63  52.09889 9.784828 #> 64  52.09889 9.784828 #> 65  50.65756 9.247136 #> 66  51.19975 9.784828 #> 67  32.54145 4.965944 #> 68  29.98639 4.191447 #> 69  30.54400 4.191447 #> 70  30.07576 4.191447 #> 71  23.83797 2.520290 #> 72  22.91692 2.381796 #> 73  41.00887 4.965944 #> 74  39.96908 4.693057 #> 75  37.75893 4.562290 #> 76  39.02077 5.108281 #> 77  45.92022 8.495488 #> 78  47.08673 8.989474 #> 79  47.40251 9.247136 #> 80  31.16833 4.191447 #> 81  31.50986 4.191447 #> 82  31.03129 4.074657 #> 83  31.07896 4.191447 #> 84  30.51102 4.074657 #> 85  30.18417 4.074657 #> 86  30.56305 4.074657 #> 87  30.56305 4.074657 #> 88  30.65242 4.074657 #> 89  30.78946 4.191447 #> 90  30.11310 4.191447 #> 91  30.92649 4.311585 #> 92  31.34707 4.191447 #> 93  32.09375 4.311585 #> 94  31.16833 4.191447 #> 95  30.70009 4.191447 #> 96  30.41058 4.191447 #> 97  30.20247 4.191447 #> 98  31.07896 4.191447 #> 99  31.16833 4.191447 #> 100 30.09480 4.074657 #> 101 30.65242 4.074657 #> 102 30.09480 4.074657 #> 103 30.56305 4.074657 #> 104 30.09480 4.074657 #> 105 30.56305 4.074657 #> 106 30.47368 4.074657 #> 107 29.88670 4.074657 #> 108 30.32121 4.191447 #> 109 33.02227 4.311585 #> 110 33.44284 4.191447 #> 111 33.06397 4.191447 #> 112 19.64833 1.954311 #> 113 19.29211 1.954311 #> 114 19.08400 1.954311 #> 115 18.72778 1.954311 #> 116 19.15869 1.954311 #> 117 19.00261 1.954311 #> 118 19.27668 2.067948 #> 119 19.38509 2.010327 #> 120 18.72778 1.954311 #> 121 21.44789 1.954311 #> 122 21.76005 1.954311 #> 123 22.45109 1.954311 #> 124 21.58131 1.954311 #> 125 21.80772 2.010327"},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/smoothic.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable Selection Using a Smooth Information Criterion (SIC) — smoothic","title":"Variable Selection Using a Smooth Information Criterion (SIC) — smoothic","text":"Implements SIC \\(\\epsilon\\)-telescope method, either using single multi-parameter regression. Returns estimated coefficients, estimated standard errors (SEE) value penalized likelihood function. Note function scale predictors unit variance, however, final estimates converted back original scale.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/smoothic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable Selection Using a Smooth Information Criterion (SIC) — smoothic","text":"","code":"smoothic(   formula,   data,   family = \"sgnd\",   model = \"mpr\",   lambda = \"log(n)\",   epsilon_1 = 10,   epsilon_T = 1e-04,   steps_T = 100,   zero_tol = 1e-05,   max_it = 10000,   optimizer = \"nlm\",   kappa,   tau,   max_it_vec,   stepmax_nlm )"},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/smoothic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variable Selection Using a Smooth Information Criterion (SIC) — smoothic","text":"formula object class \"formula\": two-sided object response left hand side model variables right hand side. data data frame containing variables model; data frame unstandardized. family family model, default family = \"sgnd\" \"Smooth Generalized Distribution\" shape parameter kappa also estimated. Classical regression normally distributed errors performed family = \"normal\". family = \"laplace\", corresponds robust regression errors Laplace distribution. model type regression implemented, either model = \"mpr\" multi-parameter regression, model = \"spr\" single parameter regression (.e., classical normal linear regression). Defaults model=\"mpr\". lambda Value penalty tuning parameter. Suggested values \"log(n)\" \"2\" BIC AIC respectively. Defaults lambda =\"log(n)\" BIC case. epsilon_1 Starting value \\(\\epsilon\\)-telescope. Defaults 10. epsilon_T Final value \\(\\epsilon\\)-telescope. Defaults 1e-04. steps_T Number steps \\(\\epsilon\\)-telescope. Defaults 100. zero_tol Coefficients value treated zero. Defaults 1e-05. max_it Maximum number iterations performed optimization terminated. Defaults 1e+04. optimizer optimization procedure used. Defaults optimizer = \"nlm\", nlm function stats package used. tends stable manually  coded Newton-Raphson procedure used optimizer = \"manual\". kappa Optional user-supplied positive kappa value (> 0.2 avoid computational issues) family = \"sgnd\". supplied, shape parameter kappa fixed value optimization. supplied, kappa estimated data. tau Optional user-supplied positive smoothing parameter value \"Smooth Generalized Normal Distribution\" family = \"sgnd\" family = \"laplace\". supplied, tau = \"0.15\". Smaller values tau bring approximation closer absolute value function, can cause optimization become unstable. issues standard error calculation smaller values tau using Laplace distribution robust regression setting. max_it_vec Optional vector length steps_T contains maximum number iterations performed \\(\\epsilon\\)-telescope step. supplied, max_it maximum number iterations performed step. stepmax_nlm Optional maximum allowable scaled step length (positive scalar) passed nlm optimizer = \"nlm\". supplied, default values nlm used.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/smoothic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variable Selection Using a Smooth Information Criterion (SIC) — smoothic","text":"list estimates estimated standard errors. coefficients - vector coefficients. see - vector estimated standard errors. model - matched type model called. plike - value penalized likelihood function. kappa - value estimated/fixed shape parameter kappa family = \"sgnd\".","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/smoothic.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Variable Selection Using a Smooth Information Criterion (SIC) — smoothic","text":"O'Neill, M. Burke, K. (2021) Variable Selection Using Smooth Information Criterion Multi-Parameter Regression Models. <arXiv:2110.02643> O'Neill, M. Burke, K. (2022) Robust Distributional Regression Automatic Variable Selection. <arXiv:2212.07317>","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/smoothic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Variable Selection Using a Smooth Information Criterion (SIC) — smoothic","text":"Meadhbh O'Neill","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/smoothic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variable Selection Using a Smooth Information Criterion (SIC) — smoothic","text":"","code":"# Sniffer Data -------------------- # MPR Model ---- results <- smoothic(   formula = y ~ .,   data = sniffer,   family = \"normal\",   model = \"mpr\" ) summary(results) #> Call: #> smoothic(formula = y ~ ., data = sniffer, family = \"normal\",  #>     model = \"mpr\") #> Family: #> [1] \"normal\" #> Model: #> [1] \"mpr\" #>  #> Coefficients: #>                    Estimate       SEE       Z    Pvalue     #> intercept_0_beta   0.731292  0.923448  0.7919  0.181835     #> tanktemp_1_beta   -0.089370  0.040557 -2.2035  0.001263 **  #> gastemp_2_beta     0.226406  0.028178  8.0349 < 2.2e-16 *** #> tankpres_3_beta           0         0       0         0     #> gaspres_4_beta     5.202725  0.840984  6.1865 < 2.2e-16 *** #> intercept_0_alpha -0.638094  0.724387 -0.8809  0.147286     #> tanktemp_1_alpha          0         0       0         0     #> gastemp_2_alpha    0.056519  0.011293  5.0049 1.007e-12 *** #> tankpres_3_alpha          0         0       0         0     #> gaspres_4_alpha           0         0       0         0     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> Penalized Likelihood: #> [1] -310.6334"},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/sniffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Sniffer Data — sniffer","title":"Sniffer Data — sniffer","text":"Data examining factors impact amount hydrocarbon vapour released gasoline pumped tank.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/sniffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sniffer Data — sniffer","text":"","code":"sniffer"},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/sniffer.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sniffer Data — sniffer","text":"data frame 125 rows 5 variables: tanktemp initial tank temperature (degrees F) gastemp temperature dispensed gasoline (degrees F) tankpres initial vapour pressure tank (psi) gaspres vapour pressure dispensed gasoline (psi) y hydrocarbons emitted (g)","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/sniffer.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sniffer Data — sniffer","text":"https://CRAN.R-project.org/package=alr4","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/sniffer.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sniffer Data — sniffer","text":"Weisberg, S. (2014). Applied Linear Regression, 4th edition. Hoboken NJ: Wiley.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/summary.smoothic.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarising Smooth Information Criterion (SIC) Fits — summary.smoothic","title":"Summarising Smooth Information Criterion (SIC) Fits — summary.smoothic","text":"summary method class “smoothic”","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/summary.smoothic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarising Smooth Information Criterion (SIC) Fits — summary.smoothic","text":"","code":"# S3 method for smoothic summary(object, ...)"},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/summary.smoothic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarising Smooth Information Criterion (SIC) Fits — summary.smoothic","text":"object object class “smoothic” result call smoothic. ... arguments passed methods.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/summary.smoothic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarising Smooth Information Criterion (SIC) Fits — summary.smoothic","text":"list containing following components: model - matched model smoothic object. coefmat - typical coefficient matrix whose columns   estimated regression coefficients, estimated standard errors (SEE) p-values. plike - value penalized likelihood function.","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/summary.smoothic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarising Smooth Information Criterion (SIC) Fits — summary.smoothic","text":"Meadhbh O'Neill","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/reference/summary.smoothic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarising Smooth Information Criterion (SIC) Fits — summary.smoothic","text":"","code":"# Sniffer Data -------------------- # MPR Model ---- results <- smoothic(   formula = y ~ .,   data = sniffer,   family = \"normal\",   model = \"mpr\" ) summary(results) #> Call: #> smoothic(formula = y ~ ., data = sniffer, family = \"normal\",  #>     model = \"mpr\") #> Family: #> [1] \"normal\" #> Model: #> [1] \"mpr\" #>  #> Coefficients: #>                    Estimate       SEE       Z    Pvalue     #> intercept_0_beta   0.731292  0.923448  0.7919  0.181835     #> tanktemp_1_beta   -0.089370  0.040557 -2.2035  0.001263 **  #> gastemp_2_beta     0.226406  0.028178  8.0349 < 2.2e-16 *** #> tankpres_3_beta           0         0       0         0     #> gaspres_4_beta     5.202725  0.840984  6.1865 < 2.2e-16 *** #> intercept_0_alpha -0.638094  0.724387 -0.8809  0.147286     #> tanktemp_1_alpha          0         0       0         0     #> gastemp_2_alpha    0.056519  0.011293  5.0049 1.007e-12 *** #> tankpres_3_alpha          0         0       0         0     #> gaspres_4_alpha           0         0       0         0     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> Penalized Likelihood: #> [1] -310.6334"},{"path":"https://meadhbh-oneill.github.io/smoothic/news/index.html","id":"smoothic-110","dir":"Changelog","previous_headings":"","what":"smoothic 1.1.0","title":"smoothic 1.1.0","text":"CRAN release: 2023-06-13 minor update smoothic() function include vector maximum iterations performed epsilon-telescope step (computationally advantageous) addition plot_effects() plotting function plot model-based conditional density curves different covariate combinations addition plot_paths() plotting function plot standardized coefficient values epsilon-telescope addition predict.smoothic()","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/news/index.html","id":"smoothic-100","dir":"Changelog","previous_headings":"","what":"smoothic 1.0.0","title":"smoothic 1.0.0","text":"CRAN release: 2022-12-15 major update smoothic() function include different families distributions addition “smooth generalized normal distribution”, additional shape parameter estimated relating kurtosis error distribution (shape parameter can also fixed user-supplied value) new option use nlm() optimization (optimizer = \"nlm\") use manually coded Newton-Raphson method (optimizer = \"manual\") addition Laplace distribution, corresponds robust regression errors heavy-tailed new dataset bostonhouseprice2, corrected version original bostonhouseprice data new dataset diabetes","code":""},{"path":"https://meadhbh-oneill.github.io/smoothic/news/index.html","id":"smoothic-010","dir":"Changelog","previous_headings":"","what":"smoothic 0.1.0","title":"smoothic 0.1.0","text":"CRAN release: 2021-10-27 initial release two datasets bostonhouseprice sniffer automatic variable selection using smoothic function can choose distributional regression (multi-parameter) model = \"mpr\" location-regression (single parameter) model = \"spr\"","code":""}]
