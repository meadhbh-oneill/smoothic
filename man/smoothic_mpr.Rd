% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smoothic_functions.R
\name{smoothic_mpr}
\alias{smoothic_mpr}
\title{Multi-Parmaeter Smooth Information Criterion (MPR-SIC) Variable Selection
 Method}
\usage{
smoothic_mpr(
  x,
  y,
  lambda = "log(n)",
  get_see = FALSE,
  epsilon_1 = 10,
  epsilon_T = 1e-05,
  steps_T = 100,
  zero_tol = 1e-08,
  theta_init = "lm",
  initial_step = 10,
  max_step_it = 1000,
  tol = 1e-08,
  max_it = 10000
)
}
\arguments{
\item{x}{Input matrix (unscaled), of dimension nobs x nvars; each row is an
observation vector.}

\item{y}{Response variable.}

\item{get_see}{Logical flag for estimation of standard errors. Defaults to
FALSE.}

\item{epsilon_1}{Starting value for \epsilon-telescope. Defaults to 10.}

\item{epsilon_T}{Final value for \epsilon-telescope. Defaults to 10^{-5}.}

\item{steps_T}{Number of steps in \epsilon-telescope. Defaults to 100.}

\item{zero_tol}{Coefficients below this are treated as being zero. Defaults
to 10^{-8}}

\item{theta_init}{Starting parameter values for the optimization. Defaults
to "lm", which obtains the linear model estimates. Alternatively, a vector
of unscaled starting parameter values of length (2*nvars + 2) can be used.}

\item{initial_step}{Initial step length for step halving in Newton-Raphson
algorithm. Defaults to 10.}

\item{max_step_it}{Maxiumum allowable number of steps to take for step
halving in Newton-Raphson algorithm. Defaults to 1000.}

\item{tol}{Tolerance value for convergence of optimization. Defaults to
10^{-8}.}

\item{max_it}{Maximum nuber of iterations to performed before the
optimization is terminated. Defaults to 10000.}
}
\value{
A list with estimates and estimated standard errors.
\itemize{
  \item coefficients - vector of coefficients.
  \item see - vector of estimated standard errors
  (NULL if \code{get_see = FALSE})}
}
\description{
Implements the normal MPR-SIC telescope method, returns coefficients and estimated
standard errors (SEE)
}
\examples{
results_mpr <- smoothic_mpr(x = x, y = y, get_see = TRUE)
results_mpr$coefficients
results_mpr$see
}
